# Generated by Django 3.0 on 2021-07-23 15:55

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.image
import property.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Назва')),
            ],
            options={
                'verbose_name': 'Район/Массив',
                'verbose_name_plural': 'Райони/Массиви',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='Назва')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Опис')),
                ('meta_description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Опис')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='image', to=settings.FILER_IMAGE_MODEL)),
            ],
            options={
                'verbose_name': 'Категорія',
                'verbose_name_plural': 'Категорії',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Назва')),
                ('sign', models.CharField(blank=True, max_length=1, null=True, verbose_name='Знак')),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюти',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Назва')),
            ],
            options={
                'verbose_name': 'Населенный пункт',
                'verbose_name_plural': 'Населенні пункти:',
            },
        ),
        migrations.CreateModel(
            name='ObjectProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70, verbose_name='Назва')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Опис')),
                ('meta_description', models.TextField(blank=True, max_length=160, null=True, verbose_name='Мета опис')),
                ('cad_num', models.CharField(blank=True, max_length=30, null=True, verbose_name='Кадастровий номер')),
                ('total_space', models.IntegerField(blank=True, null=True, verbose_name='Загальна площа')),
                ('living_space', models.IntegerField(blank=True, null=True, verbose_name='Житлова площа')),
                ('kitchen_space', models.IntegerField(blank=True, null=True, verbose_name='Кухня площа')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Висота стелі')),
                ('floor', models.IntegerField(blank=True, null=True, verbose_name='Поверх')),
                ('price', models.IntegerField(verbose_name='Ціна')),
                ('published', models.DateField(auto_now_add=True, db_index=True, verbose_name='Створено')),
                ('recommended', models.BooleanField(default=False, verbose_name='Рекомендований')),
                ('status', models.BooleanField(default=True, verbose_name='Статус')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='property.Area', verbose_name='Район/Массив')),
                ('category_object', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='property.Category', verbose_name='Категорія')),
                ('currency', models.ForeignKey(blank=True, default=property.models.get_currency, null=True, on_delete=django.db.models.deletion.PROTECT, to='property.Currency', verbose_name='Валюта')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='image_object_total', to=settings.FILER_IMAGE_MODEL, verbose_name='Головне зображення')),
                ('locality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='property.Locality', verbose_name='Населенный пункт')),
            ],
            options={
                'verbose_name': "Об'єкт",
                'verbose_name_plural': "Об'єкти",
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='ObjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Назва')),
            ],
            options={
                'verbose_name': "Тип Об'єкту",
                'verbose_name_plural': "Типи Об'єктів",
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Назва')),
            ],
            options={
                'verbose_name': 'Кількість кімнат',
                'verbose_name_plural': 'Кількість кімнат',
            },
        ),
        migrations.CreateModel(
            name='Street',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Назва')),
            ],
            options={
                'verbose_name': 'Вулиця',
                'verbose_name_plural': 'Вулиці',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='Заголовок')),
                ('base_url', models.URLField(max_length=50, validators=[django.core.validators.URLValidator(schemes=['http', 'https'])], verbose_name='Головне посилання')),
                ('meta_description', models.TextField(blank=True, max_length=100, null=True, verbose_name='Мета опис')),
                ('work_schedule', models.CharField(blank=True, max_length=30, null=True, verbose_name='Графік роботи')),
                ('phone_1', models.CharField(blank=True, error_messages={'invalid': 'некоректний формат телефону'}, max_length=30, null=True, validators=[django.core.validators.RegexValidator(regex='^[0-9]{10}$')], verbose_name='Телефон №1')),
                ('phone_2', models.CharField(blank=True, error_messages={'invalid': 'некоректний формат телефону'}, max_length=30, null=True, validators=[django.core.validators.RegexValidator(regex='^[0-9]{10}$')], verbose_name='Телефон №2')),
                ('phone_3', models.CharField(blank=True, error_messages={'invalid': 'некоректний формат телефону'}, max_length=30, null=True, validators=[django.core.validators.RegexValidator(regex='^[0-9]{10}$')], verbose_name='Телефон №3')),
                ('phone_4', models.CharField(blank=True, error_messages={'invalid': 'некоректний формат телефону'}, max_length=30, null=True, validators=[django.core.validators.RegexValidator(regex='^[0-9]{10}$')], verbose_name='Телефон №4')),
                ('email_1', models.CharField(blank=True, error_messages={'invalid': 'некоректний формат скриньки'}, max_length=30, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='Почта №1')),
                ('email_2', models.CharField(blank=True, error_messages={'invalid': 'некоректний формат скриньки'}, max_length=30, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='Почта №2')),
                ('link_facebook', models.CharField(blank=True, max_length=50, null=True, verbose_name='Посилання Facebook')),
                ('link_instagram', models.CharField(blank=True, max_length=50, null=True, verbose_name='Посилання Instagram')),
                ('link_telegram', models.CharField(blank=True, max_length=50, null=True, verbose_name='Посилання Telegram')),
                ('site_image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='site_image', to=settings.FILER_IMAGE_MODEL)),
            ],
            options={
                'verbose_name': 'Налаштування',
                'verbose_name_plural': 'Налаштування',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70, verbose_name='Назва')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Опис')),
                ('meta_description', models.TextField(blank=True, max_length=160, null=True, verbose_name='Мета опис')),
                ('published', models.DateField(auto_now_add=True, db_index=True, verbose_name='Створено')),
                ('menu', models.BooleanField(default=False, verbose_name='Меню')),
                ('information', models.BooleanField(default=False, verbose_name='Підвал (Інформація)')),
                ('about_as', models.BooleanField(default=False, verbose_name='Підвал (Про нас)')),
                ('status', models.BooleanField(default=True, verbose_name='Статус')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='image_page_total', to=settings.FILER_IMAGE_MODEL, verbose_name='Головне зображення')),
            ],
            options={
                'verbose_name': 'Сторінка',
                'verbose_name_plural': 'Сторінки',
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='ObjectPropertyImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='image_object', to=settings.FILER_IMAGE_MODEL)),
                ('object_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='property.ObjectProperty', verbose_name='Зображення')),
            ],
            options={
                'verbose_name': 'Зображення',
                'verbose_name_plural': 'Додаткові зображення',
            },
        ),
        migrations.AddField(
            model_name='objectproperty',
            name='object_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='property.ObjectType', verbose_name="Тип Об'єкту"),
        ),
        migrations.AddField(
            model_name='objectproperty',
            name='rooms',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='property.Room', verbose_name='Кількість кімнат'),
        ),
        migrations.AddField(
            model_name='objectproperty',
            name='street',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='property.Street', verbose_name='Вулиця'),
        ),
    ]
